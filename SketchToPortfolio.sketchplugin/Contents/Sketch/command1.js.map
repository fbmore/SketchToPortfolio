{"version":3,"sources":["webpack:///webpack/bootstrap 44ba58d2a63740ea669d","webpack:///./src/command1.js","webpack:///./src/utils.js","webpack:///./node_modules/sketch-module-web-view/lib/index.js","webpack:///./node_modules/mocha-js-delegate/index.js","webpack:///./node_modules/sketch-module-web-view/lib/parseQuery.js","webpack:///./node_modules/sketch-module-web-view/remote.js","webpack:///./webViewUI/index.html"],"names":["context","webUI","document","showMessage","createWebview","dispatchToWebview","IDENTIFIER","handlers","title","options","identifier","x","y","width","height","background","NSColor","colorWithDeviceRed_green_blue_alpha","blurredBackground","onlyShowCloseButton","hideTitleBar","shouldKeepAround","resizable","require","makeTitlebarTransparent","action","payload","origin","data","JSON","stringify","threadDictionary","NSThread","mainThread","panel","setTitlebarAppearsTransparent"],"mappings":";;;;;;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;;;;qBC1De,UAASA,OAAT,EAAkB;AAC/B,MAAIC,QAAQ,0BAAcD,OAAd,EAAuB,EAAvB,EAA2B,cAA3B,CAAZ;AACAA,UAAQE,QAAR,CAAiBC,WAAjB,CAA6B,mBAA7B;AACD,C;;AALD,oC;;;;;;;;;QCKgBC,a,GAAAA,a;QA4BAC,iB,GAAAA,iB;;AAjChB;;;;AACA;;;;AAFA;AAIA,IAAMC,aAAa,gCAAnB;;AAEO,SAASF,aAAT,CAAuBJ,OAAvB,EAAgCO,QAAhC,EAA0CC,KAA1C,EAAiD;AACtD,MAAMC,UAAU;AACdC,gBAAYJ,UADE;AAEdK,OAAG,CAFW;AAGdC,OAAG,CAHW;AAIdC,WAAO,GAJO;AAKdC,YAAQ,GALM;AAMd;;;;;;AAMAC,gBAAYC,QAAQC,mCAAR,CAA6C,KAAK,KAAlD,EAA2D,MAAM,KAAjE,EAA2E,MAAM,KAAjF,EAAyF,GAAzF,CAZE;AAadC,uBAAmB,KAbL;AAcdC,yBAAqB,KAdP;AAedX,gBAfc;AAgBdY,kBAAc,KAhBA;AAiBdC,sBAAkB,IAjBJ;AAkBdC,eAAW,KAlBG;AAmBdf;AAnBc,GAAhB;;AAsBA,MAAMN,QAAQ,qCAAUD,OAAV,EAAmB,mBAAAuB,CAAQ,CAAR,CAAnB,EAAuDd,OAAvD,CAAd,CAvBsD,CAuByB;AAC/Ee,4BAxBsD,CAwB3B;AAC3B,SAAOvB,KAAP;AACD;;AAEM,SAASI,iBAAT,CAA2BoB,MAA3B,EAAmCC,OAAnC,EAA4CC,MAA5C,EAAoD;AACzD,MAAI,CAAC,8BAAiBrB,UAAjB,CAAL,EAAmC;AAAE,WAAO,KAAP;AAAe;AACpD,MAAMsB,OAAOC,KAAKC,SAAL,CAAe,EAACL,cAAD,EAASC,gBAAT,EAAkBC,cAAlB,EAAf,CAAb;AACA,6BACErB,UADF,2BAEkBsB,IAFlB;AAIA,SAAO,IAAP;AACD;;AAED,SAASJ,uBAAT,GAAmC;AACjC,MAAMO,mBAAmBC,SAASC,UAAT,GAAsBF,gBAAtB,EAAzB;AACA,MAAI,CAACA,iBAAiBzB,UAAjB,CAAL,EAAmC;AAAE;AAAS;AAC9C,MAAM4B,QAAQH,iBAAiBzB,UAAjB,CAAd;AACA4B,QAAMC,6BAAN,CAAoC,IAApC;AACD;;AAED;;;;;;;;;;;;;;;;;ACnDA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,qBAAqB;AACxC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,2CAA2C;AAC3C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;AClMA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uEAAuE,wDAAwD,EAAE;;AAEjI;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC9DA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,IAAI;AACP;AACA;;;;;;;ACXA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;ACnBA,mI","file":"command1.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 44ba58d2a63740ea669d","// utils\nimport { createWebview } from './utils'\n\nexport default function(context) {\n  let webUI = createWebview(context, {}, 'Free&Willing');\n  context.document.showMessage(\"Ready to rock? ðŸ™Œ\")\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/command1.js","/* eslint-disable no-undef */\nimport WebUI from 'sketch-module-web-view';\nimport {isWebviewPresent, sendToWebview} from 'sketch-module-web-view/remote';\n\nconst IDENTIFIER = 'com.freeandwilling.ap1.webview';\n\nexport function createWebview(context, handlers, title) {\n  const options = {\n    identifier: IDENTIFIER,\n    x: 0,\n    y: 0,\n    width: 400,\n    height: 700,\n    /*\n    // background: NSColor.blackColor(), //  default is white\n    // [NSColor colorWithCalibratedRed:(r/255.0f) green:(g/255.0f) blue:(b/255.0f) alpha:1.0]\n    // background: getNSColor(0.156862745098039, 0.176470588235294, 0.27843137254902, 1.0), // 40, 45, 71\n    41, 184, 127\n    */\n    background: NSColor.colorWithDeviceRed_green_blue_alpha((41 / 255.0), (184 / 255.0), ( 127 / 255.0), 1.0),\n    blurredBackground: false,\n    onlyShowCloseButton: false,\n    title,\n    hideTitleBar: false,\n    shouldKeepAround: true,\n    resizable: false,\n    handlers,\n  };\n\n  const webUI = new WebUI(context, require('../webViewUI/index.html'), options); // eslint-disable-line global-require\n  makeTitlebarTransparent(); // eslint-disable-line no-use-before-define\n  return webUI;\n}\n\nexport function dispatchToWebview(action, payload, origin) {\n  if (!isWebviewPresent(IDENTIFIER)) { return false; }\n  const data = JSON.stringify({action, payload, origin});\n  sendToWebview(\n    IDENTIFIER,\n    `sketchBridge(${data});`,\n  );\n  return true;\n}\n\nfunction makeTitlebarTransparent() {\n  const threadDictionary = NSThread.mainThread().threadDictionary();\n  if (!threadDictionary[IDENTIFIER]) { return; }\n  const panel = threadDictionary[IDENTIFIER];\n  panel.setTitlebarAppearsTransparent(true);\n}\n\n/*\n\nfunction getNSColor(red, green, blue, alpha) {\n  return NSColor.colorWithDeviceRed_green_blue_alpha(\n    red,\n    green,\n    blue,\n    alpha\n  );\n}\n\n*/\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils.js","/* globals NSUUID NSThread NSPanel NSMakeRect NSTexturedBackgroundWindowMask NSTitledWindowMask NSWindowTitleHidden NSClosableWindowMask NSColor NSWindowMiniaturizeButton NSWindowZoomButton NSFloatingWindowLevel WebView COScript NSWindowCloseButton NSFullSizeContentViewWindowMask NSVisualEffectView NSAppearance NSAppearanceNameVibrantLight NSVisualEffectBlendingModeBehindWindow NSLayoutConstraint NSLayoutRelationEqual NSLayoutAttributeLeft NSLayoutAttributeTop NSLayoutAttributeRight NSLayoutAttributeBottom NSResizableWindowMask */\nvar MochaJSDelegate = require('mocha-js-delegate')\nvar parseQuery = require('./parseQuery')\n\nvar coScript = COScript.currentCOScript()\n\nvar LOCATION_CHANGED = 'webView:didChangeLocationWithinPageForFrame:'\n\nfunction addEdgeConstraint (edge, subview, view, constant) {\n  view.addConstraint(NSLayoutConstraint.constraintWithItem_attribute_relatedBy_toItem_attribute_multiplier_constant(\n    subview,\n    edge,\n    NSLayoutRelationEqual,\n    view,\n    edge,\n    1,\n    constant\n  ))\n}\nfunction fitSubviewToView (subview, view, constants) {\n  subview.setTranslatesAutoresizingMaskIntoConstraints(false)\n\n  addEdgeConstraint(NSLayoutAttributeLeft, subview, view, constants[0])\n  addEdgeConstraint(NSLayoutAttributeTop, subview, view, constants[1])\n  addEdgeConstraint(NSLayoutAttributeRight, subview, view, constants[2])\n  addEdgeConstraint(NSLayoutAttributeBottom, subview, view, constants[3])\n}\n\nfunction WebUI (context, frameLocation, options) {\n  options = options || {}\n  var identifier = options.identifier || NSUUID.UUID().UUIDString()\n  var threadDictionary = NSThread.mainThread().threadDictionary()\n\n  var panel\n  var webView\n\n  // if we already have a panel opened, reuse it\n  if (threadDictionary[identifier]) {\n    panel = threadDictionary[identifier]\n    panel.makeKeyAndOrderFront(null)\n\n    var subviews = panel.contentView().subviews()\n    for (var i = 0; i < subviews.length; i++) {\n      if (subviews[i].isKindOfClass(WebView.class())) {\n        webView = subviews[i]\n      }\n    }\n\n    if (!webView) {\n      throw new Error('Tried to reuse panel but couldn\\'t find the webview inside')\n    }\n\n    return {\n      panel: panel,\n      eval: webView.stringByEvaluatingJavaScriptFromString,\n      webView: webView\n    }\n  }\n\n  panel = NSPanel.alloc().init()\n\n  // Window size\n  var panelWidth = options.width || 240\n  var panelHeight = options.height || 180\n  panel.setFrame_display(NSMakeRect(\n    options.x || 0,\n    options.y || 0,\n    panelWidth,\n    panelHeight\n  ), true)\n\n  // Titlebar\n  panel.setTitle(options.title || context.plugin.name())\n  if (options.hideTitleBar) {\n    panel.setTitlebarAppearsTransparent(true)\n    panel.setTitleVisibility(NSWindowTitleHidden)\n  }\n\n  // Hide minize and zoom buttons\n  if (options.onlyShowCloseButton) {\n    panel.standardWindowButton(NSWindowMiniaturizeButton).setHidden(true)\n    panel.standardWindowButton(NSWindowZoomButton).setHidden(true)\n  }\n\n  // Close window callback\n  var closeButton = panel.standardWindowButton(NSWindowCloseButton)\n  function closeHandler () {\n    if (options.onPanelClose) {\n      var result = options.onPanelClose()\n      if (result === false) {\n        return\n      }\n    }\n    panel.close()\n    threadDictionary.removeObjectForKey(options.identifier)\n    coScript.setShouldKeepAround(false)\n  }\n\n  closeButton.setCOSJSTargetFunction(closeHandler)\n  closeButton.setAction('callAction:')\n\n  panel.setStyleMask(options.styleMask || (\n    options.resizable\n    ? (NSTexturedBackgroundWindowMask | NSTitledWindowMask | NSResizableWindowMask | NSClosableWindowMask | NSFullSizeContentViewWindowMask)\n    : (NSTexturedBackgroundWindowMask | NSTitledWindowMask | NSClosableWindowMask | NSFullSizeContentViewWindowMask)\n  ))\n  panel.becomeKeyWindow()\n  panel.setLevel(NSFloatingWindowLevel)\n\n  // Appearance\n  var backgroundColor = options.background || NSColor.whiteColor()\n  panel.setBackgroundColor(backgroundColor)\n  if (options.blurredBackground) {\n    var vibrancy = NSVisualEffectView.alloc().initWithFrame(NSMakeRect(0, 0, panelWidth, panelHeight))\n    vibrancy.setAppearance(NSAppearance.appearanceNamed(NSAppearanceNameVibrantLight))\n    vibrancy.setBlendingMode(NSVisualEffectBlendingModeBehindWindow)\n\n    // Add it to the panel\n    panel.contentView().addSubview(vibrancy)\n    fitSubviewToView(vibrancy, panel.contentView(), [0, 0, 0, 0])\n  }\n\n  threadDictionary[identifier] = panel\n\n  if (options.shouldKeepAround !== false) { // Long-running script\n    coScript.setShouldKeepAround(true)\n  }\n\n  // Add Web View to window\n  webView = WebView.alloc().initWithFrame(NSMakeRect(\n    0,\n    options.hideTitleBar ? -24 : 0,\n    options.width || 240,\n    (options.height || 180) - (options.hideTitleBar ? 0 : 24)\n  ))\n\n  if (options.frameLoadDelegate || options.handlers) {\n    var handlers = options.frameLoadDelegate || {}\n    if (options.handlers) {\n      var lastQueryId\n      handlers[LOCATION_CHANGED] = function (webview, frame) {\n        var query = webview.windowScriptObject().evaluateWebScript('window.location.hash')\n        query = parseQuery(query)\n        if (query.pluginAction && query.actionId && query.actionId !== lastQueryId && query.pluginAction in options.handlers) {\n          lastQueryId = query.actionId\n          try {\n            query.pluginArgs = JSON.parse(query.pluginArgs)\n          } catch (err) {}\n          options.handlers[query.pluginAction].apply(context, query.pluginArgs)\n        }\n      }\n    }\n    var frameLoadDelegate = new MochaJSDelegate(handlers)\n    webView.setFrameLoadDelegate_(frameLoadDelegate.getClassInstance())\n  }\n  if (options.uiDelegate) {\n    var uiDelegate = new MochaJSDelegate(options.uiDelegate)\n    webView.setUIDelegate_(uiDelegate.getClassInstance())\n  }\n\n  if (!options.blurredBackground) {\n    webView.setOpaque(true)\n    webView.setBackgroundColor(backgroundColor)\n  } else {\n    // Prevent it from drawing a white background\n    webView.setDrawsBackground(false)\n  }\n\n  // When frameLocation is a file, prefix it with the Sketch Resources path\n  if ((/^(?!http|localhost|www|file).*\\.html?$/).test(frameLocation)) {\n    frameLocation = context.plugin.urlForResourceNamed(frameLocation).path()\n  }\n  webView.setMainFrameURL_(frameLocation)\n\n  panel.contentView().addSubview(webView)\n  fitSubviewToView(webView, panel.contentView(), [\n    0, options.hideTitleBar ? 0 : 24, 0, 0\n  ])\n\n  panel.center()\n  panel.makeKeyAndOrderFront(null)\n\n  return {\n    panel: panel,\n    eval: webView.stringByEvaluatingJavaScriptFromString,\n    webView: webView,\n    close: closeHandler\n  }\n}\n\nWebUI.clean = function () {\n  coScript.setShouldKeepAround(false)\n}\n\nmodule.exports = WebUI\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/sketch-module-web-view/lib/index.js\n// module id = 2\n// module chunks = 0","/* globals NSUUID MOClassDescription NSObject NSSelectorFromString NSClassFromString */\n\nmodule.exports = function (selectorHandlerDict, superclass) {\n  var uniqueClassName = 'MochaJSDelegate_DynamicClass_' + NSUUID.UUID().UUIDString()\n\n  var delegateClassDesc = MOClassDescription.allocateDescriptionForClassWithName_superclass_(uniqueClassName, superclass || NSObject)\n\n  delegateClassDesc.registerClass()\n\n  // Storage Handlers\n  var handlers = {}\n\n  // Define interface\n  this.setHandlerForSelector = function (selectorString, func) {\n    var handlerHasBeenSet = (selectorString in handlers)\n    var selector = NSSelectorFromString(selectorString)\n\n    handlers[selectorString] = func\n\n    /*\n      For some reason, Mocha acts weird about arguments: https://github.com/logancollins/Mocha/issues/28\n      We have to basically create a dynamic handler with a likewise dynamic number of predefined arguments.\n    */\n    if (!handlerHasBeenSet) {\n      var args = []\n      var regex = /:/g\n      while (regex.exec(selectorString)) {\n        args.push('arg' + args.length)\n      }\n\n      var dynamicFunction = eval('(function (' + args.join(', ') + ') { return handlers[selectorString].apply(this, arguments); })')\n\n      delegateClassDesc.addInstanceMethodWithSelector_function_(selector, dynamicFunction)\n    }\n  }\n\n  this.removeHandlerForSelector = function (selectorString) {\n    delete handlers[selectorString]\n  }\n\n  this.getHandlerForSelector = function (selectorString) {\n    return handlers[selectorString]\n  }\n\n  this.getAllHandlers = function () {\n    return handlers\n  }\n\n  this.getClass = function () {\n    return NSClassFromString(uniqueClassName)\n  }\n\n  this.getClassInstance = function () {\n    return NSClassFromString(uniqueClassName).new()\n  }\n\n  // Convenience\n  if (typeof selectorHandlerDict === 'object') {\n    for (var selectorString in selectorHandlerDict) {\n      this.setHandlerForSelector(selectorString, selectorHandlerDict[selectorString])\n    }\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mocha-js-delegate/index.js\n// module id = 3\n// module chunks = 0","module.exports = function (query) {\n  query = query.split('?')[1]\n  if (!query) { return }\n  query = query.split('&').reduce(function (prev, s) {\n    var res = s.split('=')\n    if (res.length === 2) {\n      prev[decodeURIComponent(res[0])] = decodeURIComponent(res[1])\n    }\n    return prev\n  }, {})\n  return query\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/sketch-module-web-view/lib/parseQuery.js\n// module id = 4\n// module chunks = 0","/* globals NSThread */\n\nvar threadDictionary = NSThread.mainThread().threadDictionary()\n\nmodule.exports.isWebviewPresent = function isWebviewPresent (identifier) {\n  return !!threadDictionary[identifier]\n}\n\nmodule.exports.sendToWebview = function sendToWebview (identifier, evalString) {\n  if (!module.exports.isWebviewPresent(identifier)) {\n    throw new Error('Webview ' + identifier + ' not found')\n  }\n\n  var webview = threadDictionary[identifier]\n    .contentView()\n    .subviews()\n  webview = webview[webview.length - 1]\n\n  return webview.stringByEvaluatingJavaScriptFromString(evalString)\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/sketch-module-web-view/remote.js\n// module id = 5\n// module chunks = 0","module.exports = \"file://\" + context.plugin.urlForResourceNamed(\"_webpack_resources/2e63120747645794d758b48acf223d97.html\").path();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./webViewUI/index.html\n// module id = 6\n// module chunks = 0"],"sourceRoot":""}